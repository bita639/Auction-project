# Generated by Django 3.0.8 on 2020-07-23 16:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import smart_selects.db_fields
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuctionDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auction_date', models.DateField()),
            ],
            options={
                'verbose_name': 'AuctionDate',
                'verbose_name_plural': '1. AuctionDate',
            },
        ),
        migrations.CreateModel(
            name='AuctionSession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auction_start_time', models.TimeField()),
                ('auction_end_time', models.TimeField()),
                ('auction_date', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='auction_date_session', to='auction.AuctionDate')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'verbose_name_plural': '2.Categories',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_category_name', models.CharField(max_length=150, unique=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='auction.Category')),
            ],
            options={
                'verbose_name_plural': '3.SubCategory',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('image', models.ImageField(upload_to='product')),
                ('active', models.BooleanField(default=False)),
                ('rejected', models.BooleanField(default=False)),
                ('created', models.DateField(auto_now_add=True)),
                ('auction_date', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='auction_date_product', to='auction.AuctionDate')),
                ('auction_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='auction_session_product', to='auction.AuctionSession')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_product', to='auction.Category')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_product', to=settings.AUTH_USER_MODEL)),
                ('sub_category', smart_selects.db_fields.GroupedForeignKey(group_field='category', on_delete=django.db.models.deletion.CASCADE, related_name='subcategory_product', to='auction.SubCategory')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name_plural': '4.Products',
                'ordering': ['-id'],
            },
        ),
    ]
